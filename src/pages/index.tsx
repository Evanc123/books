"use client";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import ImageUpload from "~/components/image-upload";

import { api } from "~/utils/api";
import { useRouter } from "next/router";
import Masonry, { ResponsiveMasonry } from "react-responsive-masonry";

const AWS_BUCKET_NAME = process.env.NEXT_PUBLIC_AWS_BUCKET_NAME;

export default function Home() {
  return (
    <>
      <Head>
        <title>books</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <AuthShowcase />
      <a href="https://dewey.ink">
        <div className="sticky bottom-0 right-0 w-[340px] border bg-amber-500">
          Interested in the future of books? check out dewey
        </div>
      </a>
    </>
  );
}

function AuthShowcase() {
  const router = useRouter();
  const { data: sessionData } = useSession();

  // Check for 'myShelves' query param, default to 'false' if not present
  const myShelves = router.query.myShelves ?? "false";

  const { data: images } =
    myShelves === "true"
      ? api.images.getAll.useQuery()
      : api.images.getAllPublic.useQuery();

  const routeToImageView = (imageId: string) => {
    void router.push(`/images/${imageId}`);
  };

  const toggleShelveView = () => {
    const newMyShelvesValue = myShelves === "true" ? "false" : "true";
    void router.push({
      query: { ...router.query, myShelves: newMyShelvesValue },
    });
  };

  return (
    <div className="relative flex flex-col items-center justify-center gap-4">
      <header className="absolute left-2 top-2">Shelves</header>
      <header
        className="absolute right-4 top-0 cursor-pointer rounded-full bg-white/10 font-semibold text-black no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </header>
      <div className="absolute top-1">{sessionData && <ImageUpload />}</div>
      <div className="flex gap-4 pt-14">
        <div
          className={`${myShelves === "false" ? "underline hover:decoration-black" : ""} cursor-pointer hover:underline hover:decoration-slate-300`}
          onClick={toggleShelveView}
        >
          All Shelves
        </div>
        <div
          className={`${myShelves === "true" ? "underline hover:decoration-black" : ""} cursor-pointer hover:underline hover:decoration-slate-300`}
          onClick={toggleShelveView}
        >
          My Shelves
        </div>
      </div>
      <ResponsiveMasonry className="w-full px-10">
        <Masonry columnsCount={2}>
          {images?.map((image) => (
            // eslint-disable-next-line @next/next/no-img-element
            <img
              key={image.id}
              onClick={() => routeToImageView(image.id)}
              src={`${AWS_BUCKET_NAME}${image.name}`}
              alt={image.name}
              className="w-full cursor-pointer object-cover"
              style={{ aspectRatio: "auto" }}
            />
          ))}
        </Masonry>
      </ResponsiveMasonry>
      <div className="grid auto-rows-max grid-cols-2  px-10 pt-4"></div>
    </div>
  );
}
